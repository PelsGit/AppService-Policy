on: push

env:
  resourceGroupName: rutgerpels-ishare-testenv-weu
  appserviceTemplate: Templates/AppService.json

jobs:
  Build-Artifacts:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2.3.4
    - name: build Bicep file
      uses: Azure/cli@1.0.4
      with:
        inlineScript: |
          az bicep build --file Templates/AppService.bicep --outfile ${{ env.appserviceTemplate }}
    - name: Upload Template Artifacts
      uses: actions/upload-artifact@v2.2.4
      with:
        name: build-artifacts 
        path: |
          PolicyTemplates
          Scripts
          Templates

  Test-Deployments:
    runs-on: ubuntu-latest
    needs: Build-Artifacts
    steps:
    - name: Checkout
      uses: actions/checkout@v2.3.4
    - name: Download Artifacts
      uses: actions/download-artifact@v2
      with:
        name: build-artifacts
    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{secrets.AZURE_CREDENTIALS2}}
        enable-AzPSSession: true
    - name: Check Policy Deployments
      uses: Azure/powershell@v1
      with: 
        inlineScript: |
          .\Scripts\CheckPolicies.ps1
        azPSVersion: latest
    - name: Test web app deployment
      uses: Azure/powershell@v1
      with:
        inlineScript: |
          Select-AzSubscription ${{secrets.AZURE_SUBSCRIPTIONID}}
          New-AzResourceGroupDeployment -ResourceGroupName ${{ env.resourceGroupName }} -TemplateFile ${{ env.appserviceTemplate }} -WhatIf
        azPSVersion: latest

  Deploy-Policies:
    runs-on: ubuntu-latest
    environment: Deployment
    needs: Test-Deployments
    steps:
    - name: Checkout
      uses: actions/checkout@v2.3.4
    - name: Download Artifacts
      uses: actions/download-artifact@v2
      with:
        name: build-artifacts
    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{secrets.AZURE_CREDENTIALS2}}
        enable-AzPSSession: true
    - name: Run Deploy Policies
      uses: Azure/powershell@v1
      with: 
        inlineScript: |
          .\Scripts\DeployPolicies.ps1 -SubscriptionName ${{secrets.SUBSCRIPTION_NAME}} -ResourceGroupName ${{ env.resourceGroupName }}
        azPSVersion: latest

#created an approval gate for this step. Just in case you do not want to redeploy an App Service.
  Deploy-Appservice:
    runs-on: ubuntu-latest
    environment: Deployment
    needs: Deploy-Policies
    steps:
    - name: Checkout
      uses: actions/checkout@v2.3.4
    - name: Download Artifacts
      uses: actions/download-artifact@v2
      with:
        name: build-artifacts
    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{secrets.AZURE_CREDENTIALS2}}
        enable-AzPSSession: true
    - name: Deploy app service
      uses: Azure/powershell@v1
      with: 
        inlineScript: |
          Select-AzSubscription ${{secrets.AZURE_SUBSCRIPTIONID}}
          New-AzResourceGroupDeployment -ResourceGroupName ${{ env.resourceGroupName }} -TemplateFile ${{ env.appserviceTemplate }}
        azPSVersion: latest

  Compliancy-Scan:
    runs-on: ubuntu-latest
    needs: Deploy-Appservice
    steps:
    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{secrets.AZURE_CREDENTIALS2}}
        enable-AzPSSession: true
    - name: Wait for 15 minutes
      uses: Azure/powershell@v1
      with:
        inlineScript: |
          Write-Host "Going to sleep for 15 minutes"
          Start-Sleep -s 900
        azPSVersion: latest
    - name: Run compliancy Scan
      uses: Azure/powershell@v1
      with:
        inlineScript: |
          Select-AzSubscription ${{secrets.AZURE_SUBSCRIPTIONID}}
          Start-AzPolicyComplianceScan -ResourceGroupName ${{ env.resourceGroupName }}
        azPSVersion: latest
